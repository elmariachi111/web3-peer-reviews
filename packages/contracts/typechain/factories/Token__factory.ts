/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseUri_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6103e8608052610100604052602360a08181529062001a4d60c039600790620000299082620001be565b5060016008553480156200003c57600080fd5b506040518060400160405280600b81526020016a29b0b6b83632aa37b5b2b760a91b8152506040518060400160405280600681526020016529aa27a5a2a760d11b8152508160009081620000919190620001be565b506001620000a08282620001be565b505050620000bd620000b7620000c360201b60201c565b620000c7565b6200028a565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014457607f821691505b6020821081036200016557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b957600081815260208120601f850160051c81016020861015620001945750805b601f850160051c820191505b81811015620001b557828155600101620001a0565b5050505b505050565b81516001600160401b03811115620001da57620001da62000119565b620001f281620001eb84546200012f565b846200016b565b602080601f8311600181146200022a5760008415620002115750858301515b600019600386901b1c1916600185901b178555620001b5565b600085815260208120601f198616915b828110156200025b578886015182559484019460019091019084016200023a565b50858210156200027a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516117aa620002a3600039600050506117aa6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a22cb46511610071578063a22cb4651461024d578063b88d4fde14610260578063c87b56dd14610273578063e985e9c514610286578063f2fde38b1461029957600080fd5b806370a0823114610202578063715018a61461022357806375794a3c1461022b5780638da5cb5b1461023457806395d89b411461024557600080fd5b806323b872dd116100f457806323b872dd146101a357806340d097c3146101b657806342842e0e146101c957806355f804b3146101dc5780636352211e146101ef57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b61013961013436600461112e565b6102ac565b60405190151581526020015b60405180910390f35b6101566102fe565b60405161014591906111a2565b6101766101713660046111b5565b610390565b6040516001600160a01b039091168152602001610145565b6101a161019c3660046111ea565b6103b7565b005b6101a16101b1366004611214565b6104d1565b6101a16101c4366004611250565b610502565b6101a16101d7366004611214565b610521565b6101a16101ea3660046112f7565b61053c565b6101766101fd3660046111b5565b610550565b610215610210366004611250565b6105b0565b604051908152602001610145565b6101a1610636565b61021560085481565b6006546001600160a01b0316610176565b61015661064a565b6101a161025b366004611340565b610659565b6101a161026e36600461137c565b610664565b6101566102813660046111b5565b61069c565b6101396102943660046113f8565b61074d565b6101a16102a7366004611250565b61077b565b60006001600160e01b031982166380ac58cd60e01b14806102dd57506001600160e01b03198216635b5e139f60e01b145b806102f857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461030d9061142b565b80601f01602080910402602001604051908101604052809291908181526020018280546103399061142b565b80156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b5050505050905090565b600061039b826107f4565b506000908152600460205260409020546001600160a01b031690565b60006103c282610550565b9050806001600160a01b0316836001600160a01b0316036104345760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104505750610450813361074d565b6104c25760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161042b565b6104cc8383610853565b505050565b6104db33826108c1565b6104f75760405162461bcd60e51b815260040161042b90611465565b6104cc838383610920565b6008546105108160016114c8565b60085561051d8282610a91565b5050565b6104cc83838360405180602001604052806000815250610664565b610544610aab565b600761051d8282611529565b6000818152600260205260408120546001600160a01b0316806102f85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161042b565b60006001600160a01b03821661061a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161042b565b506001600160a01b031660009081526003602052604090205490565b61063e610aab565b6106486000610b05565b565b60606001805461030d9061142b565b61051d338383610b57565b61066e33836108c1565b61068a5760405162461bcd60e51b815260040161042b90611465565b61069684848484610c25565b50505050565b6000818152600260205260409020546060906001600160a01b031661071b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161042b565b600761072683610c58565b6040516020016107379291906115e9565b6040516020818303038152906040529050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610783610aab565b6001600160a01b0381166107e85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042b565b6107f181610b05565b50565b6000818152600260205260409020546001600160a01b03166107f15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161042b565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061088882610550565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806108cd83610550565b9050806001600160a01b0316846001600160a01b031614806108f457506108f4818561074d565b806109185750836001600160a01b031661090d84610390565b6001600160a01b0316145b949350505050565b826001600160a01b031661093382610550565b6001600160a01b0316146109595760405162461bcd60e51b815260040161042b90611670565b6001600160a01b0382166109bb5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161042b565b6109c88383836001610ceb565b826001600160a01b03166109db82610550565b6001600160a01b031614610a015760405162461bcd60e51b815260040161042b90611670565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61051d828260405180602001604052806000815250610d73565b6006546001600160a01b031633146106485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042b565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610bb85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161042b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c30848484610920565b610c3c84848484610da6565b6106965760405162461bcd60e51b815260040161042b906116b5565b60606000610c6583610ea7565b600101905060008167ffffffffffffffff811115610c8557610c8561126b565b6040519080825280601f01601f191660200182016040528015610caf576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610cb957509392505050565b6001811115610696576001600160a01b03841615610d31576001600160a01b03841660009081526003602052604081208054839290610d2b908490611707565b90915550505b6001600160a01b03831615610696576001600160a01b03831660009081526003602052604081208054839290610d689084906114c8565b909155505050505050565b610d7d8383610f7f565b610d8a6000848484610da6565b6104cc5760405162461bcd60e51b815260040161042b906116b5565b60006001600160a01b0384163b15610e9c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610dea90339089908890889060040161171a565b6020604051808303816000875af1925050508015610e25575060408051601f3d908101601f19168201909252610e2291810190611757565b60015b610e82573d808015610e53576040519150601f19603f3d011682016040523d82523d6000602084013e610e58565b606091505b508051600003610e7a5760405162461bcd60e51b815260040161042b906116b5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610918565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610ee65772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f12576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f3057662386f26fc10000830492506010015b6305f5e1008310610f48576305f5e100830492506008015b6127108310610f5c57612710830492506004015b60648310610f6e576064830492506002015b600a83106102f85760010192915050565b6001600160a01b038216610fd55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161042b565b6000818152600260205260409020546001600160a01b03161561103a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161042b565b611048600083836001610ceb565b6000818152600260205260409020546001600160a01b0316156110ad5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161042b565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146107f157600080fd5b60006020828403121561114057600080fd5b813561114b81611118565b9392505050565b60005b8381101561116d578181015183820152602001611155565b50506000910152565b6000815180845261118e816020860160208601611152565b601f01601f19169290920160200192915050565b60208152600061114b6020830184611176565b6000602082840312156111c757600080fd5b5035919050565b80356001600160a01b03811681146111e557600080fd5b919050565b600080604083850312156111fd57600080fd5b611206836111ce565b946020939093013593505050565b60008060006060848603121561122957600080fd5b611232846111ce565b9250611240602085016111ce565b9150604084013590509250925092565b60006020828403121561126257600080fd5b61114b826111ce565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561129c5761129c61126b565b604051601f8501601f19908116603f011681019082821181831017156112c4576112c461126b565b816040528093508581528686860111156112dd57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561130957600080fd5b813567ffffffffffffffff81111561132057600080fd5b8201601f8101841361133157600080fd5b61091884823560208401611281565b6000806040838503121561135357600080fd5b61135c836111ce565b91506020830135801515811461137157600080fd5b809150509250929050565b6000806000806080858703121561139257600080fd5b61139b856111ce565b93506113a9602086016111ce565b925060408501359150606085013567ffffffffffffffff8111156113cc57600080fd5b8501601f810187136113dd57600080fd5b6113ec87823560208401611281565b91505092959194509250565b6000806040838503121561140b57600080fd5b611414836111ce565b9150611422602084016111ce565b90509250929050565b600181811c9082168061143f57607f821691505b60208210810361145f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b808201808211156102f8576102f86114b2565b601f8211156104cc57600081815260208120601f850160051c810160208610156115025750805b601f850160051c820191505b818110156115215782815560010161150e565b505050505050565b815167ffffffffffffffff8111156115435761154361126b565b61155781611551845461142b565b846114db565b602080601f83116001811461158c57600084156115745750858301515b600019600386901b1c1916600185901b178555611521565b600085815260208120601f198616915b828110156115bb5788860151825594840194600190910190840161159c565b50858210156115d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008084546115f78161142b565b6001828116801561160f576001811461162457611653565b60ff1984168752821515830287019450611653565b8860005260208060002060005b8581101561164a5781548a820152908401908201611631565b50505082870194505b505050508351611667818360208801611152565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b818103818111156102f8576102f86114b2565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061174d90830184611176565b9695505050505050565b60006020828403121561176957600080fd5b815161114b8161111856fea2646970667358221220564a856ca29b6973a090d637a38ac746359a8ff73ed3adae329649438d17861664736f6c63430008110033687474703a2f2f6c6f63616c686f73743a333030302f6170692f6d657461646174612f";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Token";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly contractName: "Token";

  public readonly contractName: "Token";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
